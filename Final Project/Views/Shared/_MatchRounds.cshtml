@model List<Match>
@inject SignInManager<CustomIdentityUser> SignInMan
@inject UserManager<CustomIdentityUser> UserMan

@{ LeagueSettings settings = ViewBag.LeagueSettings;}

@for (int i = 0; i < 1 + (Model.Count - 1) / 2 && Model.Count != 0; i++)
{
    @if (i + 1 > settings.MaxMatchdayInAGroup)
    {
        <h4>Extra Matchday</h4>
    }
    else
    {
        <h4>Group stage - Matchday @(i + 1)/6</h4>
    }
    <div class="row">
        @for (int j = i; j < i + 2 && Model.Count - 1 >= i + j; j++)
        {
            <div class="col-sm-6">
                <div class="card bg-transparent border-white m-3">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-10">
                                <ul class="list-group">
                                    @if (Model[i + j].HomeGoals >= Model[i + j].AwayGoals)
                                    {
                                        <li class="list-group-item bg-transparent borderless">
                                            <div class="row">
                                                <div class="col-"><img class="team-icon-size" alt="" src="@Model[i+j].TeamList.Find(t => t.Id == Model[i+j].HomeTeamId).Badge" /></div>
                                                <div class="col-sm-10">@Model[i + j].TeamList.Find(t => t.Id == Model[i + j].HomeTeamId).TeamName</div>
                                                <div class="col-">@Model[i + j].HomeGoals</div>
                                            </div>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="list-group-item bg-transparent borderless disabled">
                                            <div class="row">
                                                <div class="col-"><img class="team-icon-size" alt="" src="@Model[i+j].TeamList.Find(t => t.Id == Model[i+j].HomeTeamId).Badge" /></div>
                                                <div class="col-sm-10">@Model[i + j].TeamList.Find(t => t.Id == Model[i + j].HomeTeamId).TeamName</div>
                                                <div class="col-">@Model[i + j].HomeGoals</div>
                                            </div>
                                        </li>
                                    }
                                    @if (Model[i + j].HomeGoals <= Model[i + j].AwayGoals)
                                    {
                                        <li class="list-group-item bg-transparent borderless">
                                            <div class="row">
                                                <div class="col-"><img class="team-icon-size" alt="" src="@Model[i+j].TeamList.Find(t => t.Id == Model[i+j].AwayTeamId).Badge" /></div>
                                                <div class="col-sm-10">@Model[i + j].TeamList.Find(t => t.Id == Model[i + j].AwayTeamId).TeamName</div>
                                                <div class="col-">@Model[i + j].AwayGoals</div>
                                            </div>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="list-group-item bg-transparent borderless disabled">
                                            <div class="row">
                                                <div class="col-"><img class="team-icon-size" alt="" src="@Model[i+j].TeamList.Find(t => t.Id == Model[i+j].AwayTeamId).Badge" /></div>
                                                <div class="col-sm-10">@Model[i + j].TeamList.Find(t => t.Id == Model[i + j].AwayTeamId).TeamName</div>
                                                <div class="col-">@Model[i + j].AwayGoals</div>
                                            </div>

                                        </li>
                                    }
                                </ul>
                            </div>
                            <div class="col-sm border-left text-center">
                                <p class="text-center">FT</p>
                                <p class="text-center">@Model[i + j].MatchDate</p>
                                @if (SignInMan.IsSignedIn(User))
                                {
                                    if (UserMan.IsInRoleAsync(UserMan.FindByEmailAsync(User.Identity.Name).Result, "Admin").Result)
                                    {
                                        <div>
                                            @Html.ActionLink("", "EditMatch", "Matches", new { id = Model[i + j].Id }, new { @class = "btn btn-primary far fa-edit" })
                                        </div>
                                        <div class="mt-1">
                                            <form method="post" asp-action="DeleteMatch" asp-controller="Matches">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="matchId" value="@Model[i+j].Id" />
                                                <button type="submit" class="btn btn-danger far fa-trash-alt"></button>
                                            </form>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}